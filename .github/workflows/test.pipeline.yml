name: Buerokratt DSL

on:
  push:
    branches:
      - dev # Adjust the branch name if needed
    paths:
      - '.env.test2' #this trigger is for testing purposes only

jobs:
  setup_directories:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        
      - name: Check and Create Folder Structure and copy DSLs for Ruuter v2 private
        run: |
          FOLDER_PATH=Ruuter/private/v2/
          if [ ! -d "$FOLDER_PATH" ]; then
            echo "Folder structure does not exist, creating..."
            mkdir -p "$FOLDER_PATH"
            touch "$FOLDER_PATH/README.yml"
          else
            echo "Folder structure already exists."
          fi

          SUBFOLDERS=("analytics" "hbs/backoffice" "services" "training")
          for folder in "${SUBFOLDERS[@]}"; do
            SUBFOLDER_PATH="$FOLDER_PATH$folder"
            if [ ! -d "$SUBFOLDER_PATH" ]; then
              echo "Creating $folder folder..."
              mkdir -p "$SUBFOLDER_PATH"
              touch "$SUBFOLDER_PATH/readme.yml"
              echo "Creating  GET $folder ..."
              mkdir -p "$SUBFOLDER_PATH/GET"
              touch "$SUBFOLDER_PATH/GET/readme.yml"
            else
              echo "$folder folder already exists."
            fi
          done

          SOURCE_REPO_CHATBOT=buerokratt/Buerokratt-Chatbot
          SOURCE_FOLDER_CHATBOT=DSL.Ruuter.private/DSL
          git clone --depth=1 --branch=dev  "https://github.com/$SOURCE_REPO_CHATBOT.git" source-repo-chatbot
          cp -R "source-repo-chatbot/$SOURCE_FOLDER_CHATBOT/." "$FOLDER_PATH/hbs/backoffice"
          find $FOLDER_PATH/Ruuter -iname '*.yml' -exec sed -i 's/\ templates/\ backoffice\/templates/g' {} \;

          SOURCE_REPO_ANALYTICS=buerokratt/Analytics-Module
          SOURCE_FOLDER_ANALYTICS=DSL/Ruuter
          git clone --depth=1 --branch=dev "https://github.com/$SOURCE_REPO_ANALYTICS.git" source-repo-analytics
          cp -R "source-repo-analytics/$SOURCE_FOLDER_ANALYTICS/." "$FOLDER_PATH/analytics"

          SOURCE_REPO_SERVICE=buerokratt/Service-Module
          SOURCE_FOLDER_SERVICE=DSL/Ruuter
          git clone --depth=1 --branch=dev "https://github.com/$SOURCE_REPO_SERVICE.git" source-repo-service
          cp -R "source-repo-service/$SOURCE_FOLDER_SERVICE/." "$FOLDER_PATH/services"

          SOURCE_REPO_TRAINING=buerokratt/Training-Module
          SOURCE_FOLDER_TRAINING=DSL/Ruuter.private
          git clone --depth=1 --branch=dev  "https://github.com/$SOURCE_REPO_TRAINING.git" source-repo-training
          cp -R "source-repo-training/$SOURCE_FOLDER_TRAINING/." "$FOLDER_PATH/training"



      - name: Clean Up Cloned Repositories
        run: |
          rm -rf source-repo-chatbot
          rm -rf source-repo-analytics
          rm -rf source-repo-service
          rm -rf source-repo-training


             
  build:
     needs: setup_directories
     runs-on: ubuntu-22.04

     steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

          
      - name: Load Environment Variables
        run: |
          if [ -f .env ]; then
            export $(cat .env | grep -v '^#' | xargs)
          fi
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD=$BUILD" >> $GITHUB_ENV
          echo "FIX=$FIX" >> $GITHUB_ENV

      - name: Set Docker Tag
        run: |
          LOWER_CASE_GITHUB_REPOSITORY=$(echo $GITHUB_REPOSITORY | tr '[:upper:]' '[:lower:]')
          echo "DOCKER_TAG_CUSTOM=ghcr.io/${LOWER_CASE_GITHUB_REPOSITORY}:$RELEASE-$VERSION.$BUILD.$FIX" >> $GITHUB_ENV
          echo "$GITHUB_ENV"
      - name: Remove README.md files
        run: |
          find . -name "README.md" -type f -delete
      - name: Docker Build
        run: | 
           docker image build --no-cache --tag $DOCKER_TAG_CUSTOM .


      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push Docker image to ghcr
        run: docker push $DOCKER_TAG_CUSTOM
