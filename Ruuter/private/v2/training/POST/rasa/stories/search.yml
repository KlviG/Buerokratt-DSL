assign_values:
  assign:
    params: ${incoming.body}
    type: ${incoming.body.type}
    value: ${incoming.body.value}

checkForIncomingType:
  switch:
    - condition: ${type == "responses"}
      next: getStoriesSearchForResponses
#    - condition: ${type == "forms"}
#      next: getStoriesSearchForForms
#    - condition: ${type == "slots"}
#      next: getStoriesSearchForSlots
#    - condition: ${type === undefined}
#      next: getStoriesSearch

getStoriesSearchForResponses:
  call: http.post
  args:
    url: "[#TRAINING_OPENSEARCH]/stories/_search/template"
    body:
      id: ${"story-with-" + value}
      params:
        actionOrActiveLoopValue: ${value}
      source:
        query:
          bool:
            should:
              - match:
                  steps.action: ${value}
              - match:
                  steps.active_loop: ${value}
  result: getStoriesResult

mapStoriesData:
  call: http.post
  args:
    url: "[#TRAINING_DMAPPER]/dmapper/get-stories"
    body:
      hits: ${getStoriesResult.response.body.hits.hits}
  result: storiesData
  next: returnSuccess

returnSuccess:
  return: ${storiesData.response.body}
  next: end
